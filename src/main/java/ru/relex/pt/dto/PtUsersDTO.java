package ru.relex.pt.dto;

// Generated 05.02.2009 16:47:31 by Hibernate Tools 3.2.0.beta7

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.BatchSize;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;


/**
 * PtUsers generated by hbm2java
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)
@Table(name = "PT_USERS", uniqueConstraints = {})
@BatchSize(size=100)
public class PtUsersDTO extends IdableDTO implements Serializable
{

    // Fields

    private BigDecimal userId;

    private String lastName;

    private String firstName;

    private String middleName;

    private String login;

    private String passwd;

    private Boolean isDeleted;
    
    private Boolean isActive;

    private String email;

    private String address;

    private String phone;

    private byte[] avatar;

    private String comments;

    private String skills;
    
    private String lang;
    
    private BigDecimal timezone;
    
    private Date createdDate;
    

    private Set<PwWorkTimesDTO> pwWorkTimeses = new HashSet<PwWorkTimesDTO>(0);

    private Set<PwBlockedDaysDTO> pwBlockedDayses = new HashSet<PwBlockedDaysDTO>(
        0);

   
    // Constructors

    /** default constructor */
    public PtUsersDTO()
    {
    }

    /** minimal constructor */
    public PtUsersDTO(BigDecimal userId, String last_name, String first_name,
        String middle_name, String login, String passwd, boolean isDeleted,
        String email, String address, String phone)
    {
        this.userId = userId;
        this.lastName = last_name;
        this.firstName = first_name;
        this.middleName = middle_name;
        this.login = login;
        this.passwd = passwd;
        this.isDeleted = isDeleted;
        this.email = email;
        this.address = address;
        this.phone = phone;
    }

    // Property accessors
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "PT_USERS_SEQ")
    @GenericGenerator(name = "PT_USERS_SEQ", strategy = "ru.relex.pt.util.hibernate.BigDecimalSequenceGenerator", parameters = {@Parameter(name = "sequence", value = "PT_USERS_SEQ")})
    @Column(name = "USER_ID", unique = true, nullable = false, insertable = true, updatable = true, precision = 22, scale = 0)
    public BigDecimal getUserId()
    {
        return this.userId;
    }

    public void setUserId(BigDecimal userId)
    {
        this.userId = userId;
    }

   

    @Column(name = "LAST_NAME", unique = false, nullable = false, insertable = true, updatable = true, length = 64)
    public String getLastName()
    {
        return this.lastName;
    }

    public void setLastName(String last_name)
    {
        this.lastName = last_name;
    }

    @Column(name = "FIRST_NAME", unique = false, nullable = true, insertable = true, updatable = true, length = 64)
    public String getFirstName()
    {
        return this.firstName;
    }

    public void setFirstName(String first_name)
    {
        this.firstName = first_name;
    }

    @Column(name = "MIDDLE_NAME", unique = false, nullable = true, insertable = true, updatable = true, length = 64)
    public String getMiddleName()
    {
        return this.middleName;
    }

    public void setMiddleName(String middle_name)
    {
        this.middleName = middle_name;
    }

    @Column(name = "LOGIN", unique = true, nullable = false, insertable = true, updatable = true, length = 64)
    public String getLogin()
    {
        return this.login;
    }

    public void setLogin(String login)
    {
        this.login = login;
    }

    @Column(name = "PASSWD", unique = false, nullable = false, insertable = true, updatable = true, length = 64)
    public String getPasswd()
    {
        return this.passwd;
    }

    public void setPasswd(String passwd)
    {
        this.passwd = passwd;
    }

    @Column(name = "COMMENTS", unique = false, nullable = true, insertable = true, updatable = true, length = 2048)
    public String getComments()
    {
        return this.comments;
    }

    public void setComments(String comments)
    {
        this.comments = comments;
    }

    @Column(name = "SKILLS", unique = false, nullable = true, insertable = true, updatable = true, length = 2048)
    public String getSkills()
    {
        return this.skills;
    }

    public void setSkills(String skills)
    {
        this.skills = skills;
    }

    @Column(name = "IS_DELETED", unique = false, nullable = false, insertable = true, updatable = true, precision = 22, scale = 0)
    public Boolean getIsDeleted()
    {
        return this.isDeleted;
    }

    public void setIsDeleted(Boolean isDeleted)
    {
        this.isDeleted = isDeleted;
    }
 
    @Column(name = "IS_ACTIVE", unique = false, nullable = false, insertable = true, updatable = true, precision = 22, scale = 0)
    public Boolean getIsActive()
    {
        return isActive;
    }

    public void setIsActive(Boolean isActive)
    {
        this.isActive = isActive;
    }

    @Column(name = "EMAIL", unique = false, nullable = false, insertable = true, updatable = true, length = 128)
    public String getEmail()
    {
        return this.email;
    }

    public void setEmail(String email)
    {
        this.email = email;
    }

    @Column(name = "ADDRESS", unique = false, nullable = false, insertable = true, updatable = true, length = 256)
    public String getAddress()
    {
        return this.address;
    }

    public void setAddress(String address)
    {
        this.address = address;
    }

    @Column(name = "PHONE", unique = false, nullable = false, insertable = true, updatable = true, length = 32)
    public String getPhone()
    {
        return this.phone;
    }

    public void setPhone(String phone)
    {
        this.phone = phone;
    }

    @Lob
    @Column(name = "AVATAR", unique = false, nullable = true, insertable = true, updatable = true)
    @Basic(fetch=FetchType.LAZY)
    public byte[] getAvatar()
    {
    	return this.avatar;
    }

    public void setAvatar(byte[] avatar)
    {
        this.avatar = avatar;
    }
    
    @Column(name = "LANG", unique = false, nullable = true, insertable = true, updatable = true, length = 64)
    public String getLang()
    {
        return this.lang;
    }

    public void setLang(String lang)
    {
        this.lang = lang;
    }
    
    @Column(name = "TIMEZONE", nullable = false, precision = 22, scale = 0)
    public BigDecimal getTimezone()
    {
        return this.timezone;
    }

    public void setTimezone(BigDecimal timezone)
    {
        this.timezone = timezone;
    }
    
    @OneToMany(cascade = {CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "ptUsers")
    public Set<PwWorkTimesDTO> getPwWorkTimeses()
    {
        return pwWorkTimeses;
    }

    public void setPwWorkTimeses(Set<PwWorkTimesDTO> pwWorkTimeses)
    {
        this.pwWorkTimeses = pwWorkTimeses;
    }

    @OneToMany(cascade = {CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "ptAuthor")
    public Set<PwBlockedDaysDTO> getPwBlockedDayses()
    {
        return pwBlockedDayses;
    }

    public void setPwBlockedDayses(Set<PwBlockedDaysDTO> pwBlockedDayses)
    {
        this.pwBlockedDayses = pwBlockedDayses;
    }

  
      
    public String toString()
    {
        StringBuilder fullName = new StringBuilder();
        
        if ((lastName != null) && (lastName.length() > 0))
        {
            fullName.append(lastName).append(" ");
        }
        if ((firstName != null) && (firstName.length() > 0))
        {
            fullName.append(firstName.charAt(0)).append(".");
        }
        if ((middleName != null) && (middleName.length() > 0))
        {
            fullName.append(middleName.charAt(0)).append(".");
        }
        
        return fullName.toString();
    }
    
    @Transient
    public String getFullName()
    {
        StringBuilder fullName = new StringBuilder();       
        if ((lastName != null) && (lastName.length() > 0))
        {
            fullName.append(lastName).append(" ");
        }
        if ((firstName != null) && (firstName.length() > 0))
        {
            fullName.append(firstName).append(" ");
        }
        if ((middleName != null) && (middleName.length() > 0))
        {
            fullName.append(middleName);
        }       
        return fullName.toString();
    }
    
        
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_DATE", unique = false, nullable = true, insertable = true, updatable = true, length = 13)
    public Date getCreatedDate()
    {
        return this.createdDate;
    }

    public void setCreatedDate(Date createdDate)
    {
        this.createdDate = createdDate;
    }
    
    /**
     * Данный метод необходим для поддержки реализации интерфейса {@link Idable}.
     */
    @Transient
    @Override
    public BigDecimal getId()
    {
        return getUserId();
    }
    
}
