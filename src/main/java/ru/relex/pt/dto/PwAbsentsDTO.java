package ru.relex.pt.dto;

// Generated 11.02.2009 16:09:29 by Hibernate Tools 3.2.0.beta7

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;


/**
 * PwAbsents generated by hbm2java
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)
@Table(name = "PW_ABSENTS", uniqueConstraints = {})
public class PwAbsentsDTO extends IdableDTO implements Serializable
{

    // Fields

    private BigDecimal absentId;

    private PwWorkTimesDTO pwWorkTimes;

    private PwAbsentTypeDTO pwAbsentType;

    private Date away;

    private Date back;

    private String reason;

    private Date avgback;

    // Constructors

    /** default constructor */
    public PwAbsentsDTO()
    {
    }

    /** minimal constructor */
    public PwAbsentsDTO(BigDecimal absentId, PwWorkTimesDTO pwWorkTimes,
        PwAbsentTypeDTO pwAbsentType)
    {
        this.absentId = absentId;
        this.pwWorkTimes = pwWorkTimes;
        this.pwAbsentType = pwAbsentType;
    }

    /** full constructor */
    public PwAbsentsDTO(BigDecimal absentId, PwWorkTimesDTO pwWorkTimes,
        PwAbsentTypeDTO pwAbsentType, Date away, Date back, String reason,
        Date avgback)
    {
        this.absentId = absentId;
        this.pwWorkTimes = pwWorkTimes;
        this.pwAbsentType = pwAbsentType;
        this.away = away;
        this.back = back;
        this.reason = reason;
        this.avgback = avgback;
    }

    // Property accessors
    @Id
    @Column(name = "ABSENT_ID", unique = true, nullable = false, insertable = true, updatable = true, precision = 22, scale = 0)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "PW_ABSENTS_SEQ")
    @GenericGenerator(name = "PW_ABSENTS_SEQ", strategy = "org.hibernate.id.SequenceHiLoGenerator", parameters = {@Parameter(name = "sequence", value = "PW_ABSENTS_SEQ"), @Parameter(name="max_lo", value="50")})
    public BigDecimal getAbsentId()
    {
        return this.absentId;
    }

    public void setAbsentId(BigDecimal absentId)
    {
        this.absentId = absentId;
    }

    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
    @JoinColumn(name = "WORK_TIME_ID", unique = false, nullable = false, insertable = true, updatable = true)
    public PwWorkTimesDTO getPwWorkTimes()
    {
        return this.pwWorkTimes;
    }

    public void setPwWorkTimes(PwWorkTimesDTO pwWorkTimes)
    {
        this.pwWorkTimes = pwWorkTimes;
    }

    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
    @JoinColumn(name = "ABSENT_TYPE_ID", unique = false, nullable = false, insertable = true, updatable = true)
    public PwAbsentTypeDTO getPwAbsentType()
    {
        return this.pwAbsentType;
    }

    public void setPwAbsentType(PwAbsentTypeDTO pwAbsentType)
    {
        this.pwAbsentType = pwAbsentType;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "AWAY", unique = false, nullable = true, insertable = true, updatable = true, length = 13)
    public Date getAway()
    {
        return this.away;
    }

    public void setAway(Date away)
    {
        this.away = away;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "BACK", unique = false, nullable = true, insertable = true, updatable = true, length = 13)
    public Date getBack()
    {
        return this.back;
    }

    public void setBack(Date back)
    {
        this.back = back;
    }

    @Column(name = "REASON", unique = false, nullable = true, insertable = true, updatable = true, length = 64)
    public String getReason()
    {
        return this.reason;
    }

    public void setReason(String reason)
    {
        this.reason = reason;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "AVGBACK", unique = false, nullable = true, insertable = true, updatable = true, length = 13)
    public Date getAvgback()
    {
        return this.avgback;
    }

    @Temporal(TemporalType.TIMESTAMP)
    public void setAvgback(Date avgback)
    {
        this.avgback = avgback;
    }

    /**
     * Данный метод необходим для поддержки реализации интерфейса {@link Idable}.
     */
    @Transient
    @Override
    public BigDecimal getId()
    {
        return getAbsentId();
    }
}
