package ru.relex.pt.dto;

// Generated 11.02.2009 16:09:29 by Hibernate Tools 3.2.0.beta7

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;


/**
 * PwBlockedDays generated by hbm2java
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)
@Table(name = "PW_BLOCKED_DAYS", uniqueConstraints = {})
public class PwBlockedDaysDTO extends IdableDTO implements Serializable
{

    // Fields

    private Date blockedDate;
    
    private BigDecimal blockedDateId;

    private PtUsersDTO ptAuthor;
    
    // Constructors
    /** default constructor */
    public PwBlockedDaysDTO()
    {
    }
    

    // Property accessors
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "PW_BLOCKED_DAYS_SEQ")
    @GenericGenerator(name = "PW_BLOCKED_DAYS_SEQ", strategy = "ru.relex.pt.util.hibernate.BigDecimalSequenceGenerator", parameters = {@Parameter(name = "sequence", value = "PW_BLOCKED_DAYS_SEQ")})
    @Column(name = "BLOCKED_DATE_ID", unique = true, nullable = false, insertable = true, updatable = true, precision = 22, scale = 0)
    public BigDecimal getBlockedDateId()
    {
        return this.blockedDateId;
    }

    public void setBlockedDateId(BigDecimal blockedDateId)
    {
        this.blockedDateId = blockedDateId;
    } 
    
    @Temporal(TemporalType.DATE)
    @Column(name = "BLOCKED_DATE", unique = false, nullable = false, insertable = true, updatable = true, length = 7)
    public Date getBlockedDate()
    {
        return this.blockedDate;
    }

    public void setBlockedDate(Date blockedDate)
    {
        this.blockedDate = blockedDate;
    }
    
    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
    @JoinColumn(name = "AUTHOR_ID", unique = false, nullable = false, insertable = true, updatable = true)
    public PtUsersDTO getPtAuthor()
    {
        return this.ptAuthor;
    }

    public void setPtAuthor(PtUsersDTO ptAuthor)
    {
        this.ptAuthor = ptAuthor;
    }

    /**
     * Данный метод необходим для поддержки реализации интерфейса {@link Idable}.
     */
    @Transient
    @Override
    public BigDecimal getId()
    {
        return getBlockedDateId();
    }
}
