package ru.relex.pt.dto;

// Generated 11.02.2009 16:09:29 by Hibernate Tools 3.2.0.beta7

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;


/**
 * PwWorkTimes generated by hbm2java
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.TRANSACTIONAL)
@Table(name = "PW_WORK_TIMES", uniqueConstraints = {})
public class PwWorkTimesDTO extends IdableDTO implements Serializable
{

    private static final long serialVersionUID = -6265039619042339415L;

    private BigDecimal workTimeId;

    private PtUsersDTO ptUsers;

    private PwWorkTypeDTO pwWorkType;

    private Date workDate;

    private Date workBegin;

    private Date workEnd;
    private String minTime;
    

    private Set<PwAbsentsDTO> pwAbsentses = new HashSet<PwAbsentsDTO>(0);

    // Constructors

    /** default constructor */
    public PwWorkTimesDTO()
    {
    }

    /** minimal constructor */
    public PwWorkTimesDTO(BigDecimal workTimeId, PtUsersDTO ptUsers,
        PwWorkTypeDTO pwWorkType, Date workDate)
    {
        this.workTimeId = workTimeId;
        this.ptUsers = ptUsers;
        this.pwWorkType = pwWorkType;
        this.workDate = workDate;
    }

    /** full constructor */
    public PwWorkTimesDTO(BigDecimal workTimeId, PtUsersDTO ptUsers,
        PwWorkTypeDTO pwWorkType, Date workDate, Date workBegin, Date workEnd,
        Set<PwAbsentsDTO> pwAbsentses)
    {
        this.workTimeId = workTimeId;
        this.ptUsers = ptUsers;
        this.pwWorkType = pwWorkType;
        this.workDate = workDate;
        this.workBegin = workBegin;
        this.workEnd = workEnd;
        this.pwAbsentses = pwAbsentses;
    }

    // Property accessors
    @Id
    @Column(name = "WORK_TIME_ID", unique = true, nullable = false, insertable = true, updatable = true, precision = 22, scale = 0)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "PW_WORK_TIMES_SEQ")
    @GenericGenerator(name = "PW_WORK_TIMES_SEQ", strategy = "org.hibernate.id.SequenceHiLoGenerator", parameters = {@Parameter(name = "sequence", value = "PW_WORK_TIMES_SEQ"), @Parameter(name="max_lo", value="50")})
    public BigDecimal getWorkTimeId()
    {
        return this.workTimeId;
    }

    public void setWorkTimeId(BigDecimal workTimeId)
    {
        this.workTimeId = workTimeId;
    }

    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
    @JoinColumn(name = "USER_ID", unique = false, nullable = false, insertable = true, updatable = true)
    public PtUsersDTO getPtUsers()
    {
        return this.ptUsers;
    }

    public void setPtUsers(PtUsersDTO ptUsers)
    {
        this.ptUsers = ptUsers;
    }

    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
    @JoinColumn(name = "WORK_TYPE_ID", unique = false, nullable = false, insertable = true, updatable = true)
    public PwWorkTypeDTO getPwWorkType()
    {
        return this.pwWorkType;
    }

    public void setPwWorkType(PwWorkTypeDTO pwWorkType)
    {
        this.pwWorkType = pwWorkType;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "WORK_DATE", unique = false, nullable = false, insertable = true, updatable = true, length = 7)
    public Date getWorkDate()
    {
        return this.workDate;
    }

    public void setWorkDate(Date workDate)
    {
        this.workDate = workDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "WORK_BEGIN", unique = false, nullable = true, insertable = true, updatable = true, length = 7)
    public Date getWorkBegin()
    {
        return this.workBegin;
    }

    public void setWorkBegin(Date workBegin)
    {
        this.workBegin = workBegin;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "WORK_END", unique = false, nullable = true, insertable = true, updatable = true, length = 7)
    public Date getWorkEnd()
    {
        return this.workEnd;
    }

    public void setWorkEnd(Date workEnd)
    {
        this.workEnd = workEnd;
    }

    
    @OneToMany(cascade = {CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "pwWorkTimes")
    public Set<PwAbsentsDTO> getPwAbsentses()
    {
        return this.pwAbsentses;
    }

    public void setPwAbsentses(Set<PwAbsentsDTO> pwAbsentses)
    {
        this.pwAbsentses = pwAbsentses;
    }
    
    @Transient
    public String getMinTime()
    {
        return minTime;
    }
        
    public void setMinTime(String minTime)
    {
        this.minTime = minTime;
    }
    
    private String addZero(String str)
    {
        if (str.length() == 1)
            return "0" + str;
        else
            return str;
    }

    public void setMinTime(Date minTime)
    {
        GregorianCalendar cal = new GregorianCalendar();
        cal.setTime(minTime);
        this.minTime = addZero(String.valueOf(cal
            .get(GregorianCalendar.HOUR_OF_DAY)))
            + ":" + addZero(String.valueOf(cal.get(GregorianCalendar.MINUTE)));

    }
    
    /**
     * Данный метод необходим для поддержки реализации интерфейса {@link Idable}.
     */
    @Transient
    @Override
    public BigDecimal getId()
    {
        return getWorkTimeId();
    }
    
}
